"""
Script to generate JSON files from RCV result reports.

Usage:

  $ python src/rcvresults/scripts/parse_results.py --help

"""

import argparse
from argparse import RawDescriptionHelpFormatter
import logging
from pathlib import Path

import rcvresults.parsing as parsing


_log = logging.getLogger('parse-results')

DEFAULT_OUTPUT_DIR = 'output-json'

DESCRIPTION = """\
Generate JSON files from RCV result reports.

This script parses XML or Excel result reports generated by the Dominion
system and saves the resulting data as JSON files, one per contest.
"""


def make_arg_parser():
    parser = argparse.ArgumentParser(
        description=DESCRIPTION, formatter_class=RawDescriptionHelpFormatter,
    )
    parser.add_argument(
        'report_paths', metavar='PATH', type=Path, nargs='*', help=(
            'path to one or more XML or Excel result reports.'
        ),
    )
    parser.add_argument(
        '--output-dir', metavar='OUTPUT_DIR', help=(
            'path to the html output directory. '
            f'Defaults to: {DEFAULT_OUTPUT_DIR}.'
        ), default=DEFAULT_OUTPUT_DIR,
    )
    return parser


def main():
    parser = make_arg_parser()
    args = parser.parse_args()

    log_format = '[{levelname}] {name}: {message}'
    logging.basicConfig(format=log_format, style='{', level=logging.INFO)

    report_paths = args.report_paths
    output_dir = Path(args.output_dir)

    parsing.make_jsons(report_paths, output_dir=output_dir)


if __name__ == '__main__':
    main()

